@model List<WorkFinder.Web.Models.ViewModels.AppliedJobViewModel>
@{
    ViewData["Title"] = "Applied Jobs";
    Layout = "_DashboardLayout";
    int currentPage = ViewBag.CurrentPage ?? 1;
    int totalPages = ViewBag.TotalPages ?? 1;
    int totalItems = ViewBag.TotalItems ?? 0;
}

<style>
    .dashboard-header {
        margin-bottom: 30px;
    }

    .job-table {
        background-color: white;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
    }

    .job-table th {
        font-weight: 500;
        color: #6c757d;
        border-bottom: 1px solid #e9ecef;
        padding: 15px;
    }

    .job-table td {
        padding: 15px;
        vertical-align: middle;
    }

    .badge-remote,
    .badge-fulltime,
    .badge-temp,
    .badge-contract {
        font-size: 12px;
        padding: 5px 10px;
        border-radius: 15px;
        font-weight: normal;
    }

    .badge-remote {
        background-color: #e9f0ff;
        color: #0d6efd;
    }

    .badge-fulltime {
        background-color: #e9f5ff;
        color: #0d9dfd;
    }

    .badge-temp {
        background-color: #fff8e7;
        color: #ffc107;
    }

    .badge-contract {
        background-color: #e7f9ef;
        color: #28a745;
    }

    .status-applied {
        color: #0d6efd;
        font-weight: 500;
    }

    .status-reviewing {
        color: #0dcaf0;
        font-weight: 500;
    }

    .status-interview {
        color: #ffc107;
        font-weight: 500;
    }

    .status-accepted {
        color: #28a745;
        font-weight: 500;
    }

    .status-rejected {
        color: #dc3545;
        font-weight: 500;
    }

    .status-active {
        color: #28a745;
        font-weight: 500;
    }

    .status-pending {
        color: #ffc107;
        font-weight: 500;
    }

    .status-rejected {
        color: #dc3545;
        font-weight: 500;
    }

    .view-details {
        color: #0d6efd;
        text-decoration: none;
    }

    .view-details:hover {
        text-decoration: underline;
    }

    .company-logo {
        width: 40px;
        height: 40px;
        border-radius: 5px;
        object-fit: cover;
        background-color: #f8f9fa;
    }

    .pagination-container {
        display: flex;
        justify-content: center;
        margin-top: 20px;
    }

    .pagination .page-link {
        color: #333;
        background-color: #fff;
        border-color: #dee2e6;
    }

    .pagination .page-item.active .page-link {
        background-color: #0d6efd;
        border-color: #0d6efd;
        color: white;
    }

    .pagination .page-link:focus {
        box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
    }

    .pagination .page-link:hover {
        background-color: #e9ecef;
        border-color: #dee2e6;
        color: #0d6efd;
    }

    .empty-state {
        text-align: center;
        padding: 60px 20px;
    }

    .empty-state i {
        font-size: 60px;
        color: #dee2e6;
        margin-bottom: 20px;
    }

    .empty-state h4 {
        margin-bottom: 10px;
        color: #6c757d;
    }

    .empty-state p {
        color: #adb5bd;
        max-width: 400px;
        margin: 0 auto 20px;
    }

    .btn-primary {
        background-color: #0d6efd;
        border-color: #0d6efd;
    }
</style>

<div class="dashboard-header">
    <h4>Applied Jobs</h4>
    <p class="text-secondary">View and manage all the jobs you've applied for</p>
</div>

<div class="job-table">
    @if (Model != null && Model.Any())
    {
        <table class="table mb-0">
            <thead>
                <tr>
                    <th>Job</th>
                    <th>Company</th>
                    <th>Date Applied</th>
                    <th>Status</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var job in Model)
                {
                    <tr>
                        <td>
                            <div class="d-flex flex-column">
                                <div class="d-flex align-items-center mb-1">
                                    <span class="fw-bold me-2">@job.JobTitle</span>
                                    <span class="badge @GetBadgeClass(job.JobType)">@job.JobType</span>
                                </div>
                                <div class="d-flex text-secondary small">
                                    <span class="me-3">@job.Location</span>
                                    <span>@job.Salary</span>
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="d-flex align-items-center">
                                @if (!string.IsNullOrEmpty(job.CompanyLogo))
                                {
                                    <img src="@job.CompanyLogo" alt="@job.CompanyName" class="company-logo me-2">
                                }
                                <span>@job.CompanyName</span>
                            </div>
                        </td>
                        <td>@job.DateApplied.ToString("MMM d, yyyy HH:mm")</td>
                        <td><span class="status-@job.Status.ToLower()">@job.Status</span></td>
                        <td><a href="/Job/@job.JobId" class="view-details">View Details</a></td>
                    </tr>
                }
            </tbody>
        </table>

        @if (totalPages > 1)
        {
            <div class="pagination-container">
                <nav aria-label="Page navigation">
                    <ul class="pagination">
                        @if (currentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Applied", "Dashboard", new { page = currentPage - 1 })"
                                    aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>
                        }

                        @for (int i = 1; i <= totalPages; i++)
                        {
                            <li class="page-item @(i == currentPage ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Applied", "Dashboard", new { page = i })">@i</a>
                            </li>
                        }

                        @if (currentPage < totalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Applied", "Dashboard", new { page = currentPage + 1 })"
                                    aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        }
    }
    else
    {
        <div class="empty-state">
            <i class="fas fa-clipboard-list"></i>
            <h4>No applications yet</h4>
            <p>You haven't applied to any jobs yet. Start your job search to find opportunities that match your skills and
                interests.</p>
            <a href="/Job" class="btn btn-primary">Find Jobs</a>
        </div>
    }
</div>

@functions {
    public string GetBadgeClass(string jobType)
    {
        return jobType.ToLower() switch
        {
            "remote" => "badge-remote",
            "full time" => "badge-fulltime",
            "part time" => "badge-fulltime",
            "temporary" => "badge-temp",
            "contract" => "badge-contract",
            "contract base" => "badge-contract",
            _ => "badge-remote"
        };
    }
}

@section Scripts {
    <script>
        // Display toast messages if TempData exists
        document.addEventListener('DOMContentLoaded', function () {
            @if (TempData["SuccessMessage"] != null)
                {
                    <text>
                        window.toast.showToast('Success', '@TempData["SuccessMessage"]', 'success');
                    </text>
            }

                @if (TempData["ErrorMessage"] != null)
                {
                    <text>
                        window.toast.showToast('Error', '@TempData["ErrorMessage"]', 'error');
                    </text>
            }
                });
    </script>
}