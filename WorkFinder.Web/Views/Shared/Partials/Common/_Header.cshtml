@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@inject UserManager<ApplicationUser> UserManager;
@{
    var user = await UserManager.GetUserAsync(User);
    var profilePicture = "/img/default-avatar.png";

}
<div id="header-top-bar" class="header-top-bar">
    <nav class="navbar navbar-expand-lg">
        <div class="container">
            <div class="collapse navbar-collapse" id="topNavbarContent">
                @if (User.IsInRole(UserRoles.Employer))
                {
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                        <li class="nav-item"><a
                                class="nav-link @(ViewContext.RouteData.Values["controller"].ToString() == "Home" && ViewContext.RouteData.Values["action"].ToString() == "Index" ? "active" : "")"
                                href="/Employer">Dashboard</a></li>
                        <li class="nav-item"><a
                                class="nav-link @(ViewContext.RouteData.Values["controller"].ToString() == "Job" ? "active" : "")"
                                href="/Employer/Job">My Jobs</a></li>
                        <li class="nav-item"><a
                                class="nav-link @(ViewContext.RouteData.Values["controller"].ToString() == "Company" && ViewContext.RouteData.Values["action"].ToString() == "Profile" ? "active" : "")"
                                href="/Employer/Company/Profile">Company Profile</a></li>
                        <li class="nav-item"><a class="nav-link" href="/Employer/Job/Create">Post A Job</a></li>
                        <li class="nav-item"><a class="nav-link" href="#">Customer Support</a></li>
                    </ul>
                }
                else
                {
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                        <li class="nav-item"><a
                                class="nav-link @(ViewContext.RouteData.Values["controller"].ToString() == "Home" && ViewContext.RouteData.Values["action"].ToString() == "Index" ? "active" : "")"
                                href="/">Home</a></li>
                        <li class="nav-item"><a
                                class="nav-link @(ViewContext.RouteData.Values["controller"].ToString() == "Job" && ViewContext.RouteData.Values["action"].ToString() == "Index" ? "active" : "")"
                                href="/Job">Find Job</a></li>
                        <li class="nav-item"><a
                                class="nav-link @(ViewContext.RouteData.Values["controller"].ToString() == "Company" && ViewContext.RouteData.Values["action"].ToString() == "Index" ? "active" : "")"
                                href="/Company">Companies</a></li>
                        <li class="nav-item"><a class="nav-link" href="#">Employers</a></li>
                        <li class="nav-item"><a class="nav-link" href="#">Customer Support</a></li>
                    </ul>
                }
                <div class="header-right d-flex gap-3 d-none d-lg-flex">
                    <div class="d-flex align-items-center gap-1">
                        <img src="~/icon/PhoneCall.svg" alt="" />
                        <a href="#" class="phone">0867713501</a>
                    </div>
                    <select class="language">
                        <option>English</option>
                        <option>Vietnamese</option>
                    </select>
                </div>
            </div>
        </div>
    </nav>
</div>
<header id="main-header" class="main-header">
    <div class="container d-flex justify-content-between align-items-center">
        <div class="header-left d-flex align-items-center">
            <div class="header-logo me-4">
                <a href="/" title="Home">
                    <img src="~/icon/Logo.png" alt="WorkFinder Logo" class="logo-img">
                </a>
            </div>
            <div class="search-wrapper d-none d-md-block">
                @if (User.IsInRole(UserRoles.JobSeeker))
                {
                    @await Component.InvokeAsync("Search")
                }

            </div>
        </div>
        <div class="header-login d-flex align-items-center">
            <button class="navbar-toggler d-lg-none d-inline-block me-2" type="button" data-bs-toggle="offcanvas"
                data-bs-target="#mobileMenu" aria-controls="mobileMenu">
                <span class="navbar-toggler-icon"></span>
            </button>
            @if (User?.Identity?.IsAuthenticated == true && User.IsInRole(UserRoles.JobSeeker))
            {
                <div class="user-profile dropdown">
                    <div class="d-flex align-items-center d-none d-lg-flex dropdown-toggle" id="userDropdown"
                        data-bs-toggle="dropdown" aria-expanded="false">
                        <span class="me-2 user-greeting d-none d-lg-inline">Xin chào, @User.Identity.Name</span>
                        <div class="avatar-container">
                            <img src="@profilePicture" alt="User Avatar" class="rounded-circle" width="40" height="40">
                        </div>
                    </div>

                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                        <li><a class="dropdown-item" href="/Account/Profile">Tài khoản</a></li>
                        <li><a class="dropdown-item" href="/Dashboard">Dashboard</a></li>
                        <li><a class="dropdown-item" href="/Resume">CV của tôi</a></li>
                        <li>
                            <hr class="dropdown-divider">
                        </li>
                        <li>
                            <form asp-area="Auth" asp-controller="Auth" asp-action="Logout" method="post">
                                <button type="submit" class="dropdown-item">Đăng xuất</button>
                            </form>
                        </li>
                    </ul>
                </div>
            }
            else if (User?.Identity?.IsAuthenticated == true && User.IsInRole(UserRoles.Employer))
            {
                <ul class="list-unstyled d-flex gap-3">
                    <li class="nav-item dropdown">
                        <div class="nav-link dropdown-toggle text-dark d-none d-lg-flex gap-3 align-items-center justify-content-between"
                            href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            <button class="btn btn-outline-primary">Post A Job</button>
                            <img src=@profilePicture alt="User Avatar" class="rounded-circle" width="40" height="40">
                        </div>

                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdown">
                            <li>
                                <a class="dropdown-item" asp-area="Employer" asp-controller="Account" asp-action="Profile">
                                    <i class="fas fa-user me-2"></i> Profile
                                </a>
                            </li>
                            <li>
                                <a class="dropdown-item" asp-area="Employer" asp-controller="Account" asp-action="Settings">
                                    <i class="fas fa-cog me-2"></i> Settings
                                </a>
                            </li>
                            <li>
                                <hr class="dropdown-divider">
                            </li>
                            <li>
                                <form class="form-inline" asp-area="Auth" asp-controller="Auth" asp-action="Logout">
                                    <button type="submit" class="dropdown-item">
                                        <i class="fas fa-sign-out-alt me-2"></i> Logout
                                    </button>
                                </form>
                            </li>
                        </ul>
                    </li>
                </ul>
            }
            else
            {
                <div class="d-none d-lg-flex">
                    <btn class="btn btn-outline-primary me-2"><a class="nav-link" href="/Auth/Login">Sign In</a></btn>
                    <btn class="btn btn-primary">Post A Jobs</btn>
                </div>
                <div class="d-lg-none">
                    <a href="/Auth/Login" class="btn btn-sm btn-outline-primary me-2">Sign In</a>
                </div>
            }


        </div>
    </div>
</header>

<!-- Mobile Menu Offcanvas -->
<div class="offcanvas offcanvas-start" tabindex="-1" id="mobileMenu" aria-labelledby="mobileMenuLabel">
    <div class="offcanvas-header">
        <div class="header-logo">
            <a href="/" title="Home">
                <img src="~/icon/Logo.png" alt="WorkFinder Logo" class="logo-img">
            </a>
        </div>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <div class="mobile-menu">
            @if (User.IsInRole(UserRoles.Employer))
            {
                <ul class="navbar-nav">
                    <li class="nav-item"><a
                            class="nav-link @(ViewContext.RouteData.Values["controller"].ToString() == "Home" && ViewContext.RouteData.Values["action"].ToString() == "Index" ? "active" : "")"
                            href="/Employer">Dashboard</a></li>
                    <li class="nav-item"><a
                            class="nav-link @(ViewContext.RouteData.Values["controller"].ToString() == "Job" ? "active" : "")"
                            href="/Employer/Job">My Jobs</a></li>
                    <li class="nav-item"><a
                            class="nav-link @(ViewContext.RouteData.Values["controller"].ToString() == "Company" && ViewContext.RouteData.Values["action"].ToString() == "Profile" ? "active" : "")"
                            href="/Employer/Company/Profile">Company Profile</a></li>
                    <li class="nav-item"><a class="nav-link" href="/Employer/Job/Create">Post A Job</a></li>
                    <li class="nav-item"><a class="nav-link" href="#">Customer Support</a></li>
                </ul>
            }
            else
            {
                <ul class="navbar-nav">
                    <li class="nav-item"><a
                            class="nav-link @(ViewContext.RouteData.Values["controller"].ToString() == "Home" && ViewContext.RouteData.Values["action"].ToString() == "Index" ? "active" : "")"
                            href="/">Home</a></li>
                    <li class="nav-item"><a
                            class="nav-link @(ViewContext.RouteData.Values["controller"].ToString() == "Job" && ViewContext.RouteData.Values["action"].ToString() == "Index" ? "active" : "")"
                            href="/Job">Find Job</a></li>
                    <li class="nav-item"><a
                            class="nav-link @(ViewContext.RouteData.Values["controller"].ToString() == "Company" && ViewContext.RouteData.Values["action"].ToString() == "Index" ? "active" : "")"
                            href="/Company">Companies</a></li>
                    <li class="nav-item"><a class="nav-link" href="#">Employers</a></li>
                    <li class="nav-item"><a class="nav-link" href="#">Customer Support</a></li>
                </ul>
            }
            @if (User?.Identity?.IsAuthenticated == true)
            {
                <div class="mt-4 pt-3 border-top">
                    <form asp-area="Auth" asp-controller="Auth" asp-action="Logout" method="post">
                        <button type="submit" class="btn btn-outline-danger w-100">Đăng xuất</button>
                    </form>
                </div>
            }
            else
            {
                <div class="mt-4 pt-3 border-top">
                    <a href="/Auth/Login" class="btn btn-primary w-100 mb-2">Đăng nhập</a>
                    <a href="/Auth/Register" class="btn btn-outline-primary w-100">Đăng ký</a>
                </div>
            }
        </div>
    </div>
</div>

<style>
    .navbar {
        background-color: var(--gray-100);
        line-height: 1;
    }

    .nav-link {
        color: var(--gray-400);
    }

    .nav-link:hover,
    .nav-link:active,
    .nav-link.active {
        color: #0A65CC;
    }

    #topNavbarContent {
        justify-content: space-between;
    }

    .phone {
        color: var(--gray-600);
        text-decoration: none;
    }

    .main-header {
        padding: 1rem 0;
        transition: padding 0.3s ease;
    }

    .btn {
        padding: 1.2rem 2.4rem;
        line-height: 2.4rem;
        text-transform: none;
    }

    .header-login {
        gap: 1.2rem;
        display: flex;
        align-items: center;
        justify-content: flex-end;
    }

    .header-left {
        flex: 1;
        max-width: 70%;
    }

    .search-wrapper {
        flex: 1;
        max-width: 500px;
    }

    .mobile-menu-toggle .btn {
        padding: 0.5rem;
        border: none;
        font-size: 1.8rem;
        color: var(--gray-700);
    }

    .navbar-toggler {
        display: inline-block;
        background-color: transparent;
        border: 1px solid #ddd;
        padding: 0.8rem;
        margin-right: 0.5rem;
        color: var(--gray-700);
        font-size: 1.2rem;
        position: relative;
        width: 45px;
        height: 45px;
        transition: all 0.3s;
    }

    .navbar-toggler:focus {
        outline: none;
        box-shadow: 0 0 0 3px rgba(10, 101, 204, 0.25);
    }

    .navbar-toggler .navbar-toggler-icon {
        background-image: none;
        position: relative;
        width: 22px;
        height: 2px;
        background-color: #333;
        display: inline-block;
        transition: all 0.3s;
    }

    .navbar-toggler .navbar-toggler-icon:before,
    .navbar-toggler .navbar-toggler-icon:after {
        content: '';
        position: absolute;
        left: 0;
        width: 22px;
        height: 2px;
        background-color: #333;
        transition: all 0.3s;
    }

    .navbar-toggler .navbar-toggler-icon:before {
        top: -6px;
    }

    .navbar-toggler .navbar-toggler-icon:after {
        bottom: -6px;
    }

    .navbar-toggler[aria-expanded="true"] .navbar-toggler-icon {
        background-color: transparent;
    }

    .navbar-toggler[aria-expanded="true"] .navbar-toggler-icon:before {
        top: 0;
        transform: rotate(45deg);
    }

    .navbar-toggler[aria-expanded="true"] .navbar-toggler-icon:after {
        bottom: 0;
        transform: rotate(-45deg);
    }

    /* Offcanvas Menu Styles */
    .offcanvas {
        width: 280px;
        border-right: 1px solid #e9ecef;
        --bs-offcanvas-width: 280px !important;
        max-width: 280px !important;
    }

    .offcanvas-title {
        font-size: 2rem;
        font-weight: 600;
        color: var(--gray-800);
    }

    .mobile-menu .nav-link {
        padding: 1.2rem 1.5rem;
        font-size: 1.6rem;
        border-bottom: 1px solid #f5f5f5;
        transition: all 0.2s ease;
    }

    .mobile-menu .nav-link:hover,
    .mobile-menu .nav-link.active {
        background-color: rgba(10, 101, 204, 0.08);
        color: #0A65CC;
        font-weight: 500;
    }

    .header-logo {
        width: 200px;
    }

    .header-logo img {
        width: 100%;
        max-height: 40px;
    }

    .logo-icon {
        font-size: 2.5rem;
        color: #0A65CC;
    }

    @@media(max - width: 992px) {
        .main-header .container {
            padding-top: 0.8rem;
            padding-bottom: 0.8rem;
        }

        .btn {
            padding: 0.8rem 1.6rem;
            line-height: 2rem;
        }

        .avatar-container {
            cursor: pointer;
        }
    }

    @@media(max - width: 576px) {
        .btn-sm {
            padding: 0.6rem 1.2rem;
            line-height: 1.8rem;
            font-size: 1.4rem;
        }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Get the offcanvas element
        const offcanvasElement = document.getElementById('mobileMenu');
        const togglerButton = document.querySelector('[data-bs-target="#mobileMenu"]');

        // Add click event listener to document
        document.addEventListener('click', function (event) {
            // Only proceed if offcanvas is visible
            if (offcanvasElement && offcanvasElement.classList.contains('show')) {
                // Check if click target is outside the offcanvas and not the toggler button
                if (!offcanvasElement.contains(event.target) &&
                    event.target !== togglerButton &&
                    !togglerButton.contains(event.target)) {

                    // Hide the offcanvas using Bootstrap's API
                    const bsOffcanvas = bootstrap.Offcanvas.getInstance(offcanvasElement);
                    if (bsOffcanvas) {
                        bsOffcanvas.hide();
                    }
                }
            }
        });

        // Add an overlay element that closes the menu when clicked
        const overlay = document.createElement('div');
        overlay.className = 'offcanvas-backdrop';
        overlay.style.display = 'none';
        document.body.appendChild(overlay);

        // Show overlay when offcanvas is shown
        offcanvasElement.addEventListener('shown.bs.offcanvas', function () {
            overlay.style.display = 'block';
            overlay.style.opacity = '0.5';
        });

        // Hide overlay when offcanvas is hidden
        offcanvasElement.addEventListener('hidden.bs.offcanvas', function () {
            overlay.style.display = 'none';
        });

        // Close offcanvas when overlay is clicked
        overlay.addEventListener('click', function () {
            const bsOffcanvas = bootstrap.Offcanvas.getInstance(offcanvasElement);
            if (bsOffcanvas) {
                bsOffcanvas.hide();
            }
        });
    });
</script>
