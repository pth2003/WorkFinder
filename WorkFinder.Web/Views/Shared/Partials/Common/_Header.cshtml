@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using WorkFinder.Web.Models
@using WorkFinder.Web.Repositories
@inject UserManager<ApplicationUser> UserManager;
@inject INotificationRepository NotificationRepository;
@{
    var user = await UserManager.GetUserAsync(User);
    var userName = user?.LastName ?? User?.Identity?.Name ?? "Guest";
    var userEmail = user?.Email ?? "";
    var profilePicture = user?.ProfilePicture;
    var controller = ViewContext.RouteData.Values["controller"]?.ToString();
    var action = ViewContext.RouteData.Values["action"]?.ToString();
    var firstLetter = string.IsNullOrEmpty(userName) ? "U" : userName[0].ToString().ToUpper();

    // Get unread notifications count
    int unreadNotificationsCount = 0;
    if (user != null)
    {
        try
        {
            unreadNotificationsCount = await NotificationRepository.GetUnreadNotificationCountByUserIdAsync(user.Id.ToString());
        }
        catch (Exception ex)
        {
            // Log the error in a real app
            Console.WriteLine($"Error getting unread notification count: {ex.Message}");
        }
    }

    // Check if user is in employer role and set body class accordingly
    if (User.IsInRole(UserRoles.Employer)) 
    {
        <script>
            document.body.classList.add('employer-role');
        </script>
    }
}
<div id="header-top-bar" class="header-top-bar">
    <nav class="navbar navbar-expand-lg">
        <div class="container">
            <div class="collapse navbar-collapse" id="topNavbarContent">
                @if (User.IsInRole(UserRoles.Employer))
                {
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                        <li class="nav-item"><a
                                class="nav-link @(controller == "Home" && action == "Index" ? "active" : "")"
                                href="/Employer">Dashboard</a></li>
                        <li class="nav-item"><a class="nav-link @(controller == "Job" ? "active" : "")"
                                href="/Employer/Job">My Jobs</a></li>
                        <li class="nav-item"><a
                                class="nav-link @(controller == "Company" && action == "Profile" ? "active" : "")"
                                href="/Employer/Company/Profile">Company Profile</a></li>
                        <li class="nav-item"><a class="nav-link" href="/Employer/Job/Create">Post A Job</a></li>
                        <li class="nav-item"><a class="nav-link" href="#">Customer Support</a></li>
                    </ul>
                }
                else
                {
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                        <li class="nav-item"><a
                                class="nav-link @(controller == "Home" && action == "Index" ? "active" : "")"
                                href="/">Home</a></li>
                        <li class="nav-item"><a class="nav-link @(controller == "Job" && action == "Index" ? "active" : "")"
                                href="/Job">Find Job</a></li>
                        <li class="nav-item"><a
                                class="nav-link @(controller == "Company" && action == "Index" ? "active" : "")"
                                href="/Company">Companies</a></li>
                        <li class="nav-item"><a class="nav-link @(controller == "Dashboard" ? "active" : "")"
                                href="/Dashboard">Dashboard</a></li>
                        <li class="nav-item"><a class="nav-link" href="#">Customer Support</a></li>
                    </ul>
                }
                <div class="header-right d-flex gap-3 d-none d-lg-flex">
                    <div class="d-flex align-items-center gap-1">
                        <img src="~/icon/PhoneCall.svg" alt="" />
                        <a href="#" class="phone">0867713501</a>
                    </div>
                    <select class="language">
                        <option>English</option>
                        <option>Vietnamese</option>
                    </select>
                </div>
            </div>
        </div>
    </nav>
</div>
<header id="main-header" class="main-header">
    <div class="container d-flex justify-content-between align-items-center">
        <div class="header-left d-flex align-items-center">
            <div class="header-logo me-4">
                <a href="/" title="Home">
                    <img src="~/icon/Logo.png" alt="WorkFinder Logo" class="logo-img">
                </a>
            </div>
            <div class="search-wrapper d-none d-md-block">
                @if (User.IsInRole(UserRoles.JobSeeker))
                {
                    @await Component.InvokeAsync("Search")
                }

            </div>
        </div>
        <div class="header-login d-flex align-items-center">
            @if (User?.Identity?.IsAuthenticated == true && User.IsInRole(UserRoles.JobSeeker))
            {
                <button class="navbar-toggler d-lg-none d-inline-block me-2" type="button" data-bs-toggle="offcanvas"
                    data-bs-target="#mobileMenu" aria-controls="mobileMenu">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <!-- Notifications Dropdown -->
                <div class="notifications-dropdown me-3 d-none d-lg-block">
                    <div class="dropdown">
                        <button class="btn btn-link btn-notification position-relative" type="button"
                            data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="fas fa-bell fs-5"></i>
                            @if (unreadNotificationsCount > 0)
                            {
                                <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                                    @(unreadNotificationsCount > 9 ? "9+" : unreadNotificationsCount.ToString())
                                </span>
                            }
                        </button>
                        <div class="dropdown-menu dropdown-menu-end notification-dropdown-menu shadow-sm p-0"
                            style="width: 350px;">
                            <div
                                class="notification-header p-3 border-bottom d-flex justify-content-between align-items-center">
                                <h6 class="mb-0">Notifications</h6>
                                @if (unreadNotificationsCount > 0)
                                {
                                    <form action="/Notifications/MarkAllAsRead" method="post" class="d-inline">
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn btn-sm btn-link">Mark all as read</button>
                                    </form>
                                }
                            </div>
                            <div class="notification-body" style="max-height: 350px; overflow-y: auto;">
                                @await Html.PartialAsync("~/Views/Shared/Partials/Common/_NotificationsPartial.cshtml")
                            </div>
                            <div class="notification-footer p-2 text-center border-top">
                                <a href="/Notifications" class="text-decoration-none">View all notifications</a>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="user-profile dropdown">
                    <div class="d-flex align-items-center d-none d-lg-flex dropdown-toggle" id="userDropdown"
                        data-bs-toggle="dropdown" aria-expanded="false">
                        <div class="avatar-container">
                            @if (!string.IsNullOrEmpty(profilePicture))
                            {
                                <img src="@profilePicture" alt="User Avatar" class="rounded-circle" width="40" height="40"
                                    onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                                <div class="rounded-circle d-none text-white bg-primary"
                                    style="width: 40px; height: 40px; display: flex; align-items: center; justify-content: center; font-weight: bold;">
                                    @firstLetter</div>
                            }
                            else
                            {
                                <div class="rounded-circle text-white bg-primary"
                                    style="width: 40px; height: 40px; display: flex; align-items: center; justify-content: center; font-weight: bold;">
                                    @firstLetter</div>
                            }
                        </div>
                    </div>

                    <ul class="dropdown-menu dropdown-menu-end shadow-sm" aria-labelledby="userDropdown"
                        style="min-width: 250px; padding: 1rem;">
                        <div class="px-3 py-2 d-flex align-items-center border-bottom pb-3 mb-2">
                            @if (!string.IsNullOrEmpty(profilePicture))
                            {
                                <img src="@profilePicture" alt="User Avatar" class="rounded-circle me-3" width="40" height="40"
                                    onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                                <div class="rounded-circle d-none text-white bg-primary me-3"
                                    style="width: 40px; height: 40px; display: flex; align-items: center; justify-content: center; font-weight: bold;">
                                    @firstLetter</div>
                            }
                            else
                            {
                                <div class="rounded-circle text-white bg-primary me-3"
                                    style="width: 40px; height: 40px; display: flex; align-items: center; justify-content: center; font-weight: bold;">
                                    @firstLetter</div>
                            }
                            <div>
                                <div class="fw-bold">@userName <span class="badge bg-primary ms-1"
                                        style="font-size: 0.7rem;">PRO</span></div>
                                <div class="text-muted small">@userEmail</div>
                            </div>
                        </div>
                        <li><a class="dropdown-item d-flex align-items-center py-2" href="/Dashboard">
                                <i class="fas fa-cog me-3"></i> Dashboard
                            </a></li>
                        <li><a class="dropdown-item d-flex align-items-center py-2" href="/Dashboard">
                                <i class="fas fa-question-circle me-3"></i> Help Center
                            </a></li>
                        <li><a class="dropdown-item d-flex align-items-center py-2" href="#">
                                <i class="fas fa-moon me-3"></i> Dark Mode
                            </a></li>
                        <li><a class="dropdown-item d-flex align-items-center py-2" href="#">
                                <i class="fas fa-arrow-up me-3"></i> Upgrade Plan
                            </a></li>
                        <li class="border-top mt-2">
                            <form asp-area="Auth" asp-controller="Auth" asp-action="Logout" method="post" class="mt-2">
                                <button type="submit" class="dropdown-item d-flex align-items-center py-2">
                                    <i class="fas fa-sign-out-alt me-3"></i> Sign Out
                                </button>
                            </form>
                        </li>
                    </ul>
                </div>
            }
            else if (User?.Identity?.IsAuthenticated == true && User.IsInRole(UserRoles.Employer))
            {
                <button class="navbar-toggler d-lg-none d-inline-block me-2" type="button" data-bs-toggle="offcanvas"
                    data-bs-target="#mobileMenu" aria-controls="mobileMenu">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <ul class="list-unstyled d-flex gap-3 mb-0">
                    <li class="nav-item dropdown d-flex align-items-center gap-3">
                        <!-- Post A Job button as standalone link -->
                        <a href="/Employer/Job/Create" class="btn btn-outline-primary">Post A Job</a>
                        
                        <!-- Notification Icon -->
                        <div class="position-relative mx-2">
                            <a href="/Notifications" class="text-decoration-none">
                                <i class="fas fa-bell fs-5 text-muted"></i>
                                @if (unreadNotificationsCount > 0)
                                {
                                    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                                        @(unreadNotificationsCount > 9 ? "9+" : unreadNotificationsCount.ToString())
                                    </span>
                                }
                            </a>
                        </div>
                        
                        <!-- User dropdown separate from buttons -->
                        <div class="nav-link dropdown-toggle text-dark d-flex align-items-center"
                            href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            @if (!string.IsNullOrEmpty(profilePicture))
                            {
                                <img src="@profilePicture" alt="User Avatar" class="rounded-circle" width="40" height="40"
                                    onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                                <div class="rounded-circle d-none text-white bg-primary"
                                    style="width: 40px; height: 40px; display: flex; align-items: center; justify-content: center; font-weight: bold;">
                                    @firstLetter</div>
                            }
                            else
                            {
                                <div class="rounded-circle text-white bg-primary"
                                    style="width: 40px; height: 40px; display: flex; align-items: center; justify-content: center; font-weight: bold;">
                                    @firstLetter</div>
                            }
                        </div>
                        
                        <ul class="dropdown-menu dropdown-menu-end shadow-sm" aria-labelledby="navbarDropdown"
                            style="min-width: 250px; padding: 1rem;">
                            <div class="px-3 py-2 d-flex align-items-center border-bottom pb-3 mb-2">
                                @if (!string.IsNullOrEmpty(profilePicture))
                                {
                                    <img src="@profilePicture" alt="User Avatar" class="rounded-circle me-3" width="40"
                                        height="40"
                                        onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                                    <div class="rounded-circle d-none text-white bg-primary me-3"
                                        style="width: 40px; height: 40px; display: flex; align-items: center; justify-content: center; font-weight: bold;">
                                        @firstLetter</div>
                                }
                                else
                                {
                                    <div class="rounded-circle text-white bg-primary me-3"
                                        style="width: 40px; height: 40px; display: flex; align-items: center; justify-content: center; font-weight: bold;">
                                        @firstLetter</div>
                                }
                                <div>
                                    <div class="fw-bold">@userName <span class="badge bg-primary ms-1"
                                            style="font-size: 0.7rem;">PRO</span></div>
                                    <div class="text-muted small">@userEmail</div>
                                </div>
                            </div>
                            <li>
                                <a class="dropdown-item d-flex align-items-center py-2" href="/Account/Profile">
                                    <i class="fas fa-cog me-3"></i> Profile Settings
                                </a>
                            </li>
                            <li>
                                <a class="dropdown-item d-flex align-items-center py-2" href="/Dashboard">
                                    <i class="fas fa-question-circle me-3"></i> Help Center
                                </a>
                            </li>
                            <li>
                                <a class="dropdown-item d-flex align-items-center py-2" href="#">
                                    <i class="fas fa-moon me-3"></i> Dark Mode
                                </a>
                            </li>
                            <li>
                                <a class="dropdown-item d-flex align-items-center py-2" href="#">
                                    <i class="fas fa-arrow-up me-3"></i> Upgrade Plan
                                </a>
                            </li>
                            <li class="border-top mt-2">
                                <form class="form-inline" asp-area="Auth" asp-controller="Auth" asp-action="Logout">
                                    <button type="submit" class="dropdown-item d-flex align-items-center py-2 mt-2">
                                        <i class="fas fa-sign-out-alt me-3"></i> Sign Out
                                    </button>
                                </form>
                            </li>
                        </ul>
                    </li>
                </ul>
            }
            else
            {
                <div class="d-none d-lg-flex">
                    <a href="/Auth/Login" class="btn btn-outline-primary me-2">Sign In</a>
                    <a href="/Auth/Register" class="btn btn-primary">Post A Job</a>
                </div>
                <div class="d-lg-none">
                    <a href="/Auth/Login" class="btn btn-sm btn-outline-primary me-2">Sign In</a>
                </div>
            }


        </div>
    </div>
</header>

<!-- Mobile Menu Offcanvas -->
@if (User?.Identity?.IsAuthenticated == true)
{
    <div class="offcanvas offcanvas-start" tabindex="-1" id="mobileMenu" aria-labelledby="mobileMenuLabel"
        style="height: 100vh;">
        <div class="offcanvas-header">
            <div class="header-logo">
                <a href="/" title="Home">
                    <img src="~/icon/Logo.png" alt="WorkFinder Logo" class="logo-img">
                </a>
            </div>
            <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body">
            <div class="mobile-menu">
                @if (User.IsInRole(UserRoles.Employer))
                {
                    <ul class="navbar-nav">
                        <li class="nav-item"><a class="nav-link @(controller == "Home" && action == "Index" ? "active" : "")"
                                href="/Employer">Dashboard</a></li>
                        <li class="nav-item"><a class="nav-link @(controller == "Job" ? "active" : "")" href="/Employer/Job">My
                                Jobs</a></li>
                        <li class="nav-item"><a
                                class="nav-link @(controller == "Company" && action == "Profile" ? "active" : "")"
                                href="/Employer/Company/Profile">Company Profile</a></li>
                        <li class="nav-item"><a class="nav-link" href="/Employer/Job/Create">Post A Job</a></li>
                        <li class="nav-item"><a class="nav-link" href="#">Customer Support</a></li>
                    </ul>
                }
                else if (controller == "Dashboard" || (controller == "Account" && (action == "Profile" || action ==
                "Settings")) || controller == "JobAlert" || controller == "Notifications")
                {
                    <!-- Dashboard Sidebar for Mobile -->
                    <div class="sidebar-header mb-4">
                        <h5>CANDIDATE DASHBOARD</h5>
                    </div>
                    <ul class="sidebar-menu">
                        <li class="@(controller == "Dashboard" && action == "Index" ? "active" : "")">
                            <a href="/Dashboard" class="d-flex align-items-center">
                                <i class="fas fa-layer-group me-2"></i>
                                <span>Overview</span>
                            </a>
                        </li>
                        <li class="@(controller == "Dashboard" && action == "Applied" ? "active" : "")">
                            <a href="/Dashboard/Applied" class="d-flex align-items-center">
                                <i class="fas fa-briefcase me-2"></i>
                                <span>Applied Jobs</span>
                            </a>
                        </li>
                        <li class="@(controller == "Dashboard" && action == "Favorites" ? "active" : "")">
                            <a href="/Dashboard/Favorites" class="d-flex align-items-center">
                                <i class="far fa-bookmark me-2"></i>
                                <span>Favorite Jobs</span>
                            </a>
                        </li>
                        <li
                            class="@(controller == "Dashboard" && action == "JobAlerts" || controller == "JobAlert" ? "active" : "")">
                            <a href="/Dashboard/JobAlerts" class="d-flex align-items-center">
                                <i class="far fa-bell me-2"></i>
                                <span>Job Alerts</span>
                            </a>
                        </li>
                        <li
                            class="@(controller == "Dashboard" && action == "Notifications" || controller == "Notifications" ? "active" : "")">
                            <a href="/Dashboard/Notifications" class="d-flex align-items-center">
                                <i class="fas fa-bell me-2"></i>
                                <span>Notifications</span>
                                @if (unreadNotificationsCount > 0)
                                {
                                    <span class="notification-badge ms-auto">@(unreadNotificationsCount > 99 ? "99+" :
                                                                    unreadNotificationsCount.ToString())</span>
                                                }
                            </a>
                        </li>
                        <li class="@(controller == "Account" && action == "Settings" ? "active" : "")">
                            <a href="@Url.Action("Settings", "Account", new { area = "" })" class="d-flex align-items-center">
                                <i class="fas fa-cog me-2"></i>
                                <span>Settings</span>
                            </a>
                        </li>
                    </ul>
                }
                else
                {
                    <ul class="navbar-nav">
                        <li class="nav-item"><a class="nav-link @(controller == "Home" && action == "Index" ? "active" : "")"
                                href="/">Home</a></li>
                        <li class="nav-item"><a class="nav-link @(controller == "Job" && action == "Index" ? "active" : "")"
                                href="/Job">Find Job</a></li>
                        <li class="nav-item"><a class="nav-link @(controller == "Company" && action == "Index" ? "active" : "")"
                                href="/Company">Companies</a></li>
                        <li class="nav-item"><a class="nav-link @(controller == "Dashboard" ? "active" : "")"
                                href="/Dashboard">Dashboard</a></li>
                        <li class="nav-item"><a class="nav-link" href="#">Customer Support</a></li>
                    </ul>
                }
                <div class="mt-4 pt-3 border-top">
                    <form asp-area="Auth" asp-controller="Auth" asp-action="Logout" method="post">
                        <button type="submit" class="btn btn-outline-danger w-100">Đăng xuất</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

<style>
    .navbar {
        background-color: var(--gray-100);
        line-height: 1;
    }

    .nav-link {
        color: var(--gray-400);
    }

    .nav-link:hover,
    .nav-link:active,
    .nav-link.active {
        color: #0A65CC;
    }

    #topNavbarContent {
        justify-content: space-between;
    }

    .phone {
        color: var(--gray-600);
        text-decoration: none;
    }

    .main-header {
        transition: padding 0.3s ease;
    }
    
    /* Only apply padding for jobseeker role */
    body:not(.employer-role) .main-header {
        padding: 1.5rem 0;
    }

    .btn {
        padding: 1.2rem 2.4rem;
        line-height: 2.4rem;
        text-transform: none;
    }

    .header-login {
        gap: 1.2rem;
        display: flex;
        align-items: center;
        justify-content: flex-end;
    }

    .header-left {
        flex: 1;
        max-width: 70%;
    }

    .search-wrapper {
        flex: 1;
        max-width: 500px;
    }

    .mobile-menu-toggle .btn {
        padding: 0.5rem;
        border: none;
        font-size: 1.8rem;
        color: var(--gray-700);
    }

    .navbar-toggler {
        display: inline-block;
        background-color: transparent;
        border: 1px solid #ddd;
        padding: 0.8rem;
        margin-right: 0.5rem;
        color: var(--gray-700);
        font-size: 1.2rem;
        position: relative;
        width: 45px;
        height: 45px;
        transition: all 0.3s;
    }

    .navbar-toggler:focus {
        outline: none;
        box-shadow: 0 0 0 3px rgba(10, 101, 204, 0.25);
    }

    .navbar-toggler .navbar-toggler-icon {
        background-image: none;
        position: relative;
        width: 22px;
        height: 2px;
        background-color: #333;
        display: inline-block;
        transition: all 0.3s;
    }

    .navbar-toggler .navbar-toggler-icon:before,
    .navbar-toggler .navbar-toggler-icon:after {
        content: '';
        position: absolute;
        left: 0;
        width: 22px;
        height: 2px;
        background-color: #333;
        transition: all 0.3s;
    }

    .navbar-toggler .navbar-toggler-icon:before {
        top: -6px;
    }

    .navbar-toggler .navbar-toggler-icon:after {
        bottom: -6px;
    }

    .navbar-toggler[aria-expanded="true"] .navbar-toggler-icon {
        background-color: transparent;
    }

    .navbar-toggler[aria-expanded="true"] .navbar-toggler-icon:before {
        top: 0;
        transform: rotate(45deg);
    }

    .navbar-toggler[aria-expanded="true"] .navbar-toggler-icon:after {
        bottom: 0;
        transform: rotate(-45deg);
    }

    /* Offcanvas Menu Styles */
    .offcanvas {
        width: 280px;
        border-right: 1px solid #e9ecef;
        --bs-offcanvas-width: 280px !important;
        max-width: 280px !important;
    }

    .offcanvas-title {
        font-size: 2rem;
        font-weight: 600;
        color: var(--gray-800);
    }

    .mobile-menu .nav-link {
        padding: 1.2rem 1.5rem;
        font-size: 1.6rem;
        border-bottom: 1px solid #f5f5f5;
        transition: all 0.2s ease;
    }

    .mobile-menu .nav-link:hover,
    .mobile-menu .nav-link.active {
        background-color: rgba(10, 101, 204, 0.08);
        color: #0A65CC;
        font-weight: 500;
    }

    .header-logo {
        width: 200px;
    }

    .header-logo img {
        width: 100%;
        max-height: 40px;
    }

    .logo-icon {
        font-size: 2.5rem;
        color: #0A65CC;
    }

    /* Notification dropdown styles */
    .notification-dropdown-menu {
        padding: 0 !important;
        overflow: hidden !important;
    }
    
    .notification-body {
        max-height: 350px; 
        overflow-y: auto;
        scrollbar-width: none;
    }
    
    .notification-body::-webkit-scrollbar {
        display: none;
    }

    @@media(max-width: 992px) {
        .main-header .container {
            padding-top: 1.2rem;
            padding-bottom: 1.2rem;
        }

        .btn {
            padding: 0.8rem 1.6rem;
            line-height: 2rem;
        }

        .avatar-container {
            cursor: pointer;
        }
    }

    @@media(max-width: 576px) {
        .btn-sm {
            padding: 0.6rem 1.2rem;
            line-height: 1.8rem;
            font-size: 1.4rem;
        }
    }

    /* Header Buttons */
    .header-login .btn {
        padding: 1.4rem 2.8rem;
        line-height: 2.6rem;
        font-size: 1.2rem;
        font-weight: 500;
        transition: all 0.3s ease;
    }

    /* Sticky Header Buttons */
    .main-header.sticky .header-login .btn {
        padding: 1.2rem 2.4rem;
        line-height: 2.4rem;
        font-size: 1.1rem;
        font-weight: 500;
    }

    @@media(max-width: 992px) {
        .header-login .btn {
            padding: 1.2rem 2.4rem;
            font-size: 1.1rem;
        }

        .main-header.sticky .header-login .btn {
            padding: 1rem 2rem;
            line-height: 2rem;
            font-size: 1rem;
        }
    }

    @@media(max-width: 576px) {
        .header-login .btn {
            padding: 0.8rem 1.6rem;
            font-size: 1rem;
            line-height: 1.8rem;
        }

        .main-header.sticky .header-login .btn {
            padding: 0.7rem 1.4rem;
            line-height: 1.6rem;
            font-size: 0.95rem;
        }
    }

    /* Ẩn offcanvas backdrop (lớp phủ màu đen) */
    .offcanvas-backdrop {
        display: none !important;
        opacity: 0 !important;
    }

    /* Điều chỉnh offcanvas không cần backdrop */
    .offcanvas.show {
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.15);
    }

    /* Dashboard Sidebar Style trong Mobile Menu */
    .mobile-menu .sidebar-header h5 {
        font-size: 1.6rem;
        font-weight: 600;
        color: var(--gray-700);
        margin-bottom: 2rem;
        padding-left: 1rem;
    }

    .mobile-menu .sidebar-menu {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .mobile-menu .sidebar-menu li {
        margin-bottom: 0.8rem;
    }

    .mobile-menu .sidebar-menu li a {
        display: flex;
        align-items: center;
        padding: 1rem 1.5rem;
        color: var(--gray-600);
        text-decoration: none;
        border-radius: 0.5rem;
        transition: all 0.2s;
        font-size: 1.4rem;
    }

    .mobile-menu .sidebar-menu li a i {
        font-size: 1.6rem;
        width: 2.4rem;
    }

    .mobile-menu .sidebar-menu li.active a {
        background-color: #e8f1ff;
        color: #0A65CC;
        font-weight: 500;
    }

    .mobile-menu .sidebar-menu li a:hover {
        background-color: #f5f5f5;
    }

    .mobile-menu .notification-badge {
        background-color: #ff4d4f;
        color: white;
        border-radius: 50%;
        padding: 0.2rem 0.6rem;
        font-size: 1.2rem;
        min-width: 2.2rem;
        text-align: center;
    }

    /* Notification icon styles */
    .position-relative.mx-2 a {
        display: block;
        position: relative;
        padding: 5px;
    }
    
    .position-relative.mx-2 i {
        font-size: 1.6rem;
        color: var(--gray-600);
        transition: color 0.2s ease;
    }
    
    .position-relative.mx-2 a:hover i {
        color: var(--blue-600);
    }
    
    .position-relative.mx-2 .badge {
        font-size: 0.7rem;
        padding: 0.25em 0.45em;
        min-width: 18px;
        height: 18px;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    /* Ensure mobile view works properly */
    @@media(max-width: 992px) {
        .nav-item.dropdown.d-flex {
            display: none !important;
        }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Get the offcanvas element
        const offcanvasElement = document.getElementById('mobileMenu');

        // Only proceed if offcanvas element exists
        if (offcanvasElement) {
            const togglerButton = document.querySelector('[data-bs-target="#mobileMenu"]');

            // Add click event listener to document
            document.addEventListener('click', function (event) {
                // Only proceed if offcanvas is visible
                if (offcanvasElement.classList.contains('show')) {
                    // Check if click target is outside the offcanvas and not the toggler button
                    if (!offcanvasElement.contains(event.target) &&
                        event.target !== togglerButton &&
                        !togglerButton.contains(event.target)) {

                        // Hide the offcanvas using Bootstrap's API
                        const bsOffcanvas = bootstrap.Offcanvas.getInstance(offcanvasElement);
                        if (bsOffcanvas) {
                            bsOffcanvas.hide();
                        }
                    }
                }
            });
        }
    });
</script>
