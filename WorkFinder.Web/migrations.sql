CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;
CREATE TABLE public."AspNetRoles" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" character varying(256),
    "NormalizedName" character varying(256),
    "ConcurrencyStamp" text,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);

CREATE TABLE public.categories (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" character varying(50) NOT NULL,
    "Description" character varying(255) NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    CONSTRAINT "PK_categories" PRIMARY KEY ("Id")
);

CREATE TABLE public.users (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "FirstName" character varying(50) NOT NULL,
    "LastName" character varying(50) NOT NULL,
    "ProfilePicture" character varying(255) NOT NULL,
    "DateOfBirth" timestamp with time zone,
    "UserName" character varying(50) NOT NULL,
    "NormalizedUserName" character varying(256),
    "Email" character varying(100) NOT NULL,
    "NormalizedEmail" character varying(256),
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text,
    "SecurityStamp" text,
    "ConcurrencyStamp" text,
    "PhoneNumber" character varying(20),
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL,
    CONSTRAINT "PK_users" PRIMARY KEY ("Id")
);

CREATE TABLE public."AspNetRoleClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoleId" integer NOT NULL,
    "ClaimType" text,
    "ClaimValue" text,
    CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES public."AspNetRoles" ("Id") ON DELETE CASCADE
);

CREATE TABLE public."AspNetUserClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer NOT NULL,
    "ClaimType" text,
    "ClaimValue" text,
    CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUserClaims_users_UserId" FOREIGN KEY ("UserId") REFERENCES public.users ("Id") ON DELETE CASCADE
);

CREATE TABLE public."AspNetUserLogins" (
    "LoginProvider" text NOT NULL,
    "ProviderKey" text NOT NULL,
    "ProviderDisplayName" text,
    "UserId" integer NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_users_UserId" FOREIGN KEY ("UserId") REFERENCES public.users ("Id") ON DELETE CASCADE
);

CREATE TABLE public."AspNetUserRoles" (
    "UserId" integer NOT NULL,
    "RoleId" integer NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES public."AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_users_UserId" FOREIGN KEY ("UserId") REFERENCES public.users ("Id") ON DELETE CASCADE
);

CREATE TABLE public."AspNetUserTokens" (
    "UserId" integer NOT NULL,
    "LoginProvider" text NOT NULL,
    "Name" text NOT NULL,
    "Value" text,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_users_UserId" FOREIGN KEY ("UserId") REFERENCES public.users ("Id") ON DELETE CASCADE
);

CREATE TABLE public.companies (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" character varying(100) NOT NULL,
    "Description" text NOT NULL,
    "Logo" character varying(255) NOT NULL,
    "Banner" text NOT NULL,
    "CategoryId" integer NOT NULL,
    "Industry" character varying(50) NOT NULL,
    "EmployeeCount" integer NOT NULL,
    "FoundedDate" timestamp with time zone,
    "Website" character varying(255) NOT NULL,
    "Vision" text NOT NULL,
    "Location" character varying(100) NOT NULL,
    "Phone" text NOT NULL,
    "Email" text NOT NULL,
    "IsVerified" boolean NOT NULL,
    "OwnerId" integer NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    CONSTRAINT "PK_companies" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_companies_categories_CategoryId" FOREIGN KEY ("CategoryId") REFERENCES public.categories ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_companies_users_OwnerId" FOREIGN KEY ("OwnerId") REFERENCES public.users ("Id") ON DELETE CASCADE
);

CREATE TABLE public.resumes (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Summary" text NOT NULL,
    "Skills" text NOT NULL,
    "Education" text NOT NULL,
    "Experience" text NOT NULL,
    "Certifications" text NOT NULL,
    "Languages" text NOT NULL,
    "FileUrl" character varying(255) NOT NULL,
    "UserId" integer NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    CONSTRAINT "PK_resumes" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_resumes_users_UserId" FOREIGN KEY ("UserId") REFERENCES public.users ("Id") ON DELETE CASCADE
);

CREATE TABLE public.jobs (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Title" character varying(100) NOT NULL,
    "Description" text NOT NULL,
    "Requirements" text NOT NULL,
    "Benefits" text NOT NULL,
    "Location" character varying(100) NOT NULL,
    "SalaryMin" numeric(18,2) NOT NULL,
    "SalaryMax" numeric(18,2) NOT NULL,
    "JobType" text NOT NULL,
    "ExperienceLevel" text NOT NULL,
    "ExpiryDate" timestamp with time zone NOT NULL,
    "IsActive" boolean NOT NULL,
    "CompanyId" integer NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    CONSTRAINT "PK_jobs" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_jobs_companies_CompanyId" FOREIGN KEY ("CompanyId") REFERENCES public.companies ("Id") ON DELETE CASCADE
);

CREATE TABLE public."SocialLink" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "CompanyId" integer NOT NULL,
    "Platform" text NOT NULL,
    "Url" text NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    CONSTRAINT "PK_SocialLink" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_SocialLink_companies_CompanyId" FOREIGN KEY ("CompanyId") REFERENCES public.companies ("Id") ON DELETE CASCADE
);

CREATE TABLE public.job_applications (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "CoverLetter" text NOT NULL,
    "Status" text NOT NULL,
    "AppliedDate" timestamp with time zone NOT NULL,
    "JobId" integer NOT NULL,
    "ApplicantId" integer NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    CONSTRAINT "PK_job_applications" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_job_applications_jobs_JobId" FOREIGN KEY ("JobId") REFERENCES public.jobs ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_job_applications_users_ApplicantId" FOREIGN KEY ("ApplicantId") REFERENCES public.users ("Id") ON DELETE CASCADE
);

CREATE TABLE public.job_categories (
    "JobId" integer NOT NULL,
    "CategoryId" integer NOT NULL,
    "Id" integer NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    CONSTRAINT "PK_job_categories" PRIMARY KEY ("JobId", "CategoryId"),
    CONSTRAINT "FK_job_categories_categories_CategoryId" FOREIGN KEY ("CategoryId") REFERENCES public.categories ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_job_categories_jobs_JobId" FOREIGN KEY ("JobId") REFERENCES public.jobs ("Id") ON DELETE CASCADE
);

CREATE TABLE public.saved_jobs (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SavedDate" timestamp with time zone NOT NULL,
    "JobId" integer NOT NULL,
    "UserId" integer NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    CONSTRAINT "PK_saved_jobs" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_saved_jobs_jobs_JobId" FOREIGN KEY ("JobId") REFERENCES public.jobs ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_saved_jobs_users_UserId" FOREIGN KEY ("UserId") REFERENCES public.users ("Id") ON DELETE CASCADE
);

CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON public."AspNetRoleClaims" ("RoleId");

CREATE UNIQUE INDEX "RoleNameIndex" ON public."AspNetRoles" ("NormalizedName");

CREATE INDEX "IX_AspNetUserClaims_UserId" ON public."AspNetUserClaims" ("UserId");

CREATE INDEX "IX_AspNetUserLogins_UserId" ON public."AspNetUserLogins" ("UserId");

CREATE INDEX "IX_AspNetUserRoles_RoleId" ON public."AspNetUserRoles" ("RoleId");

CREATE INDEX "IX_companies_CategoryId" ON public.companies ("CategoryId");

CREATE UNIQUE INDEX "IX_companies_OwnerId" ON public.companies ("OwnerId");

CREATE INDEX "IX_job_applications_ApplicantId" ON public.job_applications ("ApplicantId");

CREATE INDEX "IX_job_applications_JobId" ON public.job_applications ("JobId");

CREATE INDEX "IX_job_categories_CategoryId" ON public.job_categories ("CategoryId");

CREATE INDEX "IX_jobs_CompanyId" ON public.jobs ("CompanyId");

CREATE UNIQUE INDEX "IX_resumes_UserId" ON public.resumes ("UserId");

CREATE INDEX "IX_saved_jobs_JobId" ON public.saved_jobs ("JobId");

CREATE INDEX "IX_saved_jobs_UserId" ON public.saved_jobs ("UserId");

CREATE INDEX "IX_SocialLink_CompanyId" ON public."SocialLink" ("CompanyId");

CREATE INDEX "EmailIndex" ON public.users ("NormalizedEmail");

CREATE UNIQUE INDEX "UserNameIndex" ON public.users ("NormalizedUserName");

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250324090313_InitialCreate', '9.0.3');

ALTER TABLE public.jobs ADD "Metadata" text NOT NULL DEFAULT '';

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250326152442_AddMetadataToJob', '9.0.3');

COMMIT;

