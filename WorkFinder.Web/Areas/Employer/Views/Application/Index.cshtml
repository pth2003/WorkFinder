@model WorkFinder.Web.Areas.Employer.Models.JobApplicationsViewModel
@using WorkFinder.Web.Models.Enums
@{
    ViewData["Title"] = $"Applications for {Model.Job.Title}";
    Layout = "_EmployerLayout";

    string GetStatusClass(ApplicationStatus status)
    {
        return status switch
        {
            ApplicationStatus.Applied => "primary",
            ApplicationStatus.Reviewing => "info",
            ApplicationStatus.Interview => "warning",
            ApplicationStatus.Accepted => "success",
            ApplicationStatus.Rejected => "danger",
            _ => "secondary"
        };
    }
}

<div class="container-fluid my-4">
    <div class="employers-dashboard">
        <!-- Sidebar -->
        @await Html.PartialAsync("~/Areas/Employer/Views/Shared/_SidebarPartial.cshtml")

        <!-- Main Content -->
        <div class="main-content">
            <!-- Page Header with Breadcrumb -->
            <div class="page-header mb-4">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a
                                href="@Url.Action("Index", "Home", new { area = "Employer" })">Home</a></li>
                        <li class="breadcrumb-item"><a
                                href="@Url.Action("Index", "Job", new { area = "Employer" })">Job</a></li>
                        <li class="breadcrumb-item"><a href="#">@Model.Job.Title</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Applications</li>
                    </ol>
                </nav>
            </div>

            <!-- Job Applications Header -->
            <div class="d-flex flex-column flex-md-row justify-content-between align-items-md-center mb-4 gap-3">
                <div>
                    <h2 class="mb-0 h3">Job Applications</h2>
                </div>
                <div class="d-flex">
                    <div class="dropdown">
                        <button class="btn btn-outline-secondary dropdown-toggle btn-sm" type="button" id="sortDropdown"
                            data-bs-toggle="dropdown" aria-expanded="false">
                            Sort
                        </button>
                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="sortDropdown">
                            <li><a class="dropdown-item active" href="#">Newest</a></li>
                            <li><a class="dropdown-item" href="#">Oldest</a></li>
                        </ul>
                    </div>

                    <button class="btn btn-outline-secondary ms-2 btn-sm">
                        Filter
                    </button>
                </div>
            </div>

            <!-- Applications List -->
            <div class="applications-container">
                @if (Model.Applications.Any())
                {
                    <div class="application-list-card">
                        <div class="application-header d-none d-lg-flex">
                            <div class="application-header-cell applicant-header">APPLICANT</div>
                            <div class="application-header-cell status-header">STATUS</div>
                            <div class="application-header-cell applied-header">APPLIED DATE</div>
                            <div class="application-header-cell actions-header">ACTIONS</div>
                        </div>

                        @foreach (var application in Model.Applications)
                        {
                            var statusClass = GetStatusClass(application.Status);
                            var userId = application.Applicant.Id;
                            var hasResume = Model.UserResumes.TryGetValue(userId, out var resume);
                            <div class="application-item" data-application-id="@application.Id">
                                <div class="application-cell applicant-info">
                                    <div class="d-flex align-items-center flex-wrap">
                                        <div class="applicant-avatar me-3">
                                            @if (!string.IsNullOrEmpty(application.Applicant.ProfilePicture))
                                            {
                                                <img src="@application.Applicant.ProfilePicture"
                                                    alt="@application.Applicant.FirstName @application.Applicant.LastName">
                                            }
                                            else
                                            {
                                                <div class="default-avatar">
                                                    @(application.Applicant.FirstName.FirstOrDefault())@(application.Applicant.LastName.FirstOrDefault())
                                                </div>
                                            }
                                        </div>
                                        <div class="applicant-detail-wrapper">
                                            <h5 class="applicant-name">
                                                @application.Applicant.FirstName @application.Applicant.LastName
                                            </h5>
                                            @if (hasResume)
                                            {
                                                <ul class="applicant-details list-unstyled">
                                                    @if (!string.IsNullOrEmpty(resume.Experience))
                                                    {
                                                        <li class="d-none d-sm-block">
                                                            <i class="fas fa-briefcase"></i> @resume.Experience
                                                        </li>
                                                    }
                                                    @if (!string.IsNullOrEmpty(resume.Education))
                                                    {
                                                        <li class="d-none d-sm-block">
                                                            <i class="fas fa-graduation-cap"></i> @resume.Education
                                                        </li>
                                                    }
                                                    <li class="text-muted d-block d-lg-none">
                                                        <i class="fas fa-calendar"></i> Applied:
                                                        @application.AppliedDate.ToString("MMM dd, yyyy")
                                                    </li>
                                                </ul>
                                            }
                                            else
                                            {
                                                <ul class="applicant-details">
                                                    <li class="d-block d-lg-none">
                                                        <i class="fas fa-calendar"></i> Applied:
                                                        @application.AppliedDate.ToString("MMM dd, yyyy")
                                                    </li>
                                                </ul>
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="application-cell status-cell">
                                    <span class="status-badge status-@statusClass.ToLower()">
                                        @application.Status.ToString()
                                    </span>
                                </div>
                                <div class="application-cell applied-date-cell d-none d-lg-flex">
                                    @application.AppliedDate.ToString("dd MMM, yyyy")
                                </div>
                                <div class="application-cell actions-cell ">
                                    <a href="javascript:void(0)" class="btn view-detail-btn"
                                        data-application-id="@application.Id"
                                        data-applicant-name="@application.Applicant.FirstName @application.Applicant.LastName"
                                        onclick="showCandidateDetail(@application.Id); return false;">
                                        <i class="fas fa-eye me-1"></i> View Detail
                                    </a>
                                    <div class="dropdown action-dropdown">
                                        <button class="btn more-actions-btn" type="button" data-bs-toggle="dropdown"
                                            aria-expanded="false">
                                            <i class="fas fa-ellipsis-v"></i>
                                        </button>
                                        <ul class="dropdown-menu dropdown-menu-end">
                                            @if (hasResume && !string.IsNullOrEmpty(resume.FileUrl))
                                            {
                                                <li>
                                                    <a class="dropdown-item" href="@resume.FileUrl" target="_blank">
                                                        <i class="fas fa-download me-2"></i> Download CV
                                                    </a>
                                                </li>
                                            }
                                            <li>
                                                <hr class="dropdown-divider">
                                            </li>
                                            <li>
                                                <a class="dropdown-item text-danger" href="javascript:;" data-bs-toggle="modal"
                                                    data-bs-target="#deleteModal" data-application-id="@application.Id"
                                                    data-applicant-name="@application.Applicant.FirstName @application.Applicant.LastName">
                                                    <i class="fas fa-trash me-2"></i> Reject Candidate
                                                </a>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="no-applications-found">
                        <div class="text-center py-5">
                            <i class="fas fa-users fa-4x text-muted mb-3"></i>
                            <h4>No applications found</h4>
                            <p class="text-muted">There are no applications for this job position yet.</p>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<style>
    .employers-dashboard {
        display: flex;
        gap: 30px;
    }

    /* Sidebar styles */
    .sidebar {
        width: 250px;
        flex-shrink: 0;
        font-size: 16px;
    }

    .sidebar-header h5 {
        font-size: 16px;
        font-weight: 600;
        color: #777;
        margin-bottom: 20px;
    }

    .sidebar-menu {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .sidebar-menu li {
        margin-bottom: 15px;
    }

    .sidebar-menu li a {
        display: flex;
        align-items: center;
        color: #666;
        text-decoration: none;
        padding: 10px 15px;
        border-radius: 6px;
        transition: all 0.3s;
        font-size: 15px;
    }

    .sidebar-menu li a:hover,
    .sidebar-menu li.active a {
        background-color: rgba(0, 123, 255, 0.1);
        color: #0d6efd;
    }

    .sidebar-menu li.active a {
        font-weight: 500;
    }

    .sidebar-menu li a i {
        width: 20px;
        text-align: center;
        margin-right: 8px;
    }

    .sidebar-footer {
        padding-top: 15px;
        border-top: 1px solid #eee;
    }

    .sidebar-footer a {
        color: #666;
        text-decoration: none;
        font-size: 14px;
    }

    .sidebar-footer a:hover {
        color: #0d6efd;
    }

    /* Main Content */
    .main-content {
        flex: 1;
        min-width: 0;
        /* Prevent flex item from overflowing */
        overflow-x: auto;
    }

    /* Application list card */
    .application-list-card {
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        margin-bottom: 1.5rem;
        overflow: visible;
        position: relative;
    }

    /* Header styles */
    .application-header {
        display: flex;
        background-color: #f8f9fa;
        border-bottom: 1px solid rgba(0, 0, 0, 0.1);
        padding: 15px 20px;
    }

    .application-header-cell {
        font-size: 12px;
        font-weight: 600;
        color: #6c757d;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .applicant-header {
        width: 45%;
    }

    .status-header {
        width: 15%;
    }

    .applied-header {
        width: 15%;
    }

    .actions-header {
        width: 25%;
        text-align: center;
    }

    /* Application item styles */
    .application-item {
        display: flex;
        flex-wrap: wrap;
        border-bottom: 1px solid #eee;
        padding: 15px 20px;
        transition: all 0.3s ease;
        position: relative;
    }

    .application-item:hover {
        background-color: rgba(0, 123, 255, 0.02);
    }

    .application-cell {
        padding: 0 10px;
    }

    /* Applicant info cell */
    .applicant-info {
        width: 45%;
        min-width: 250px;
    }

    .applicant-avatar {
        width: 55px;
        height: 55px;
        overflow: hidden;
        border-radius: 50%;
        background-color: #e9ecef;
        flex-shrink: 0;
    }

    .applicant-avatar img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .default-avatar {
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 20px;
        font-weight: 600;
        color: #fff;
        background-color: #0d6efd;
    }

    .applicant-name {
        font-size: 16px;
        font-weight: 600;
        margin-bottom: 2px;
    }

    .applicant-detail-wrapper {
        flex: 1;
        min-width: 0;
    }

    .applicant-details {
        margin: 0;
        padding: 0;
        font-size: 13px;
        color: #555;
    }

    .applicant-details li {
        margin-bottom: 4px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    /* Status cell */
    .status-cell {
        width: 15%;
        display: flex;
        align-items: center;
        margin: 10px 0;
    }

    .status-badge {
        display: inline-block;
        padding: 5px 10px;
        border-radius: 30px;
        font-size: 12px;
        font-weight: 500;
        white-space: nowrap;
    }

    .status-primary {
        background-color: #e6f2ff;
        color: #0d6efd;
    }

    .status-info {
        background-color: #e6f9ff;
        color: #17a2b8;
    }

    .status-warning {
        background-color: #fff9e6;
        color: #ffc107;
    }

    .status-success {
        background-color: #e6fff2;
        color: #28a745;
    }

    .status-danger {
        background-color: #ffe6e6;
        color: #dc3545;
    }

    .status-secondary {
        background-color: #e9ecef;
        color: #6c757d;
    }

    /* Applied date cell */
    .applied-date-cell {
        width: 15%;
        display: flex;
        align-items: center;
        font-size: 14px;
        color: #555;
    }

    /* Actions cell */
    .actions-cell {
        width: 25%;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
    }

    .more-actions-btn {
        background-color: #f8f9fa;
        border: 1px solid #dee2e6;
        color: #212529;
        width: 36px;
        height: 36px;
        padding: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 4px;
    }

    .more-actions-btn:hover {
        background-color: #e9ecef;
    }

    /* View Detail Button */
    .view-detail-btn {
        border: 1px solid #dee2e6;
        color: #495057;
        font-size: 13px;
        padding: 8px 16px;
        border-radius: 6px;
        background-color: #f8f9fa;
        transition: all 0.2s;
    }

    .view-detail-btn:hover {
        background-color: #e9ecef;
        color: #212529;
    }
    }

    /* Dropdown menu */
    .action-dropdown {
        position: relative;
        z-index: 1050;
    }

    .action-dropdown .dropdown-menu {
        min-width: 200px;
        padding: 8px 0;
        margin-top: 8px;
        border: none;
        border-radius: 8px;
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        right: 0;
        left: auto;
        z-index: 1050;
    }

    .dropdown-item {
        padding: 10px 15px;
        font-size: 14px;
    }

    .dropdown-item i {
        width: 18px;
    }

    .dropdown-item:hover {
        background-color: #f8f9fa;
    }

    .dropdown-item.text-danger {
        color: #dc3545;
    }

    .dropdown-item.text-danger:hover {
        background-color: #ffe6e6;
    }

    /* Dropdown submenu */
    .dropdown-submenu {
        position: relative;
    }

    .dropdown-submenu>.dropdown-menu {
        top: 0;
        left: 100%;
        margin-top: -6px;
        margin-left: -1px;
    }

    .dropdown-submenu:hover>.dropdown-menu {
        display: block;
    }

    .dropdown-submenu>a:after {
        display: block;
        content: " ";
        float: right;
        width: 0;
        height: 0;
        border-color: transparent;
        border-style: solid;
        border-width: 5px 0 5px 5px;
        border-left-color: #ccc;
        margin-top: 5px;
        margin-right: -10px;
    }

    /* Empty applications message */
    .no-applications-found {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 50px 20px;
        text-align: center;
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    }

    /* Button styles */
    .btn-sm {
        padding: 0.4rem 0.8rem;
        font-size: 0.875rem;
    }

    /* Responsive styles */
    @@media(max-width:1199px) {
        .applicant-info {
            width: 60%;
        }

        .status-cell {
            width: 20%;
        }

        .actions-cell {
            width: 20%;
        }
    }

    @@media(max-width:991px) {
        .applicant-info {
            width: 70%;
        }

        .status-cell {
            width: auto;
            margin-left: auto;
        }

        .application-header-cell,
        .application-cell {
            padding: 0 5px;
        }

        .application-item {
            padding: 15px 10px;
        }
    }

    @@media(max-width:767px) {
        .employers-dashboard {
            flex-direction: column;
        }

        .application-item {
            gap: 10px;
        }

        .applicant-info {
            width: 100%;
        }

        .status-cell {
            margin-left: 0;
            margin-top: 5px;
        }

        .actions-cell {
            margin-left: auto;
            align-items: flex-start;
        }

        .breadcrumb {
            flex-wrap: wrap;
            font-size: 0.85rem;
        }
    }

    @@media(max-width:575px) {
        .application-item {
            padding: 15px;
        }

        .applicant-avatar {
            width: 45px;
            height: 45px;
        }

        .default-avatar {
            font-size: 16px;
        }

        .applicant-name {
            font-size: 14px;
        }

        .applicant-details {
            font-size: 12px;
        }

        .status-badge {
            padding: 4px 8px;
            font-size: 11px;
        }

        .more-actions-btn {
            width: 32px;
            height: 32px;
        }
    }

    /* Candidate Detail Modal Styles */
    .candidate-profile {
        background-color: #fff;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }

    .profile-image img {
        border: 4px solid #e6f0ff;
        width: 120px;
        height: 120px;
        object-fit: cover;
    }

    .candidate-info,
    .candidate-contact {
        border: 1px solid #e9ecef;
        border-radius: 10px;
        margin-bottom: 20px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.03);
    }

    .candidate-name {
        font-weight: 600;
        margin: 10px 0 5px;
        font-size: 22px;
        color: #333;
    }

    .candidate-title {
        color: #6c757d;
        margin-bottom: 15px;
    }

    .info-label {
        font-weight: 500;
        margin-right: 5px;
        color: #495057;
    }

    .info-value {
        color: #6c757d;
    }

    .candidate-actions {
        display: flex;
        justify-content: center;
        gap: 10px;
        margin: 15px 0;
    }

    #candidateDetailTabs .nav-link {
        color: #6c757d;
        font-weight: 500;
        padding: 10px 20px;
    }

    #candidateDetailTabs .nav-link.active {
        color: #0d6efd;
        font-weight: 600;
        border-bottom: 2px solid #0d6efd;
    }

    .card-title {
        font-size: 18px;
        font-weight: 600;
        color: #333;
        margin-bottom: 15px;
    }

    #candidateBiography p,
    #candidateCoverLetter p {
        margin-bottom: 1rem;
        line-height: 1.6;
    }

    /* Loading spinner */
    .spinner-border {
        width: 3rem;
        height: 3rem;
    }
</style>

<!-- Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Reject Candidate</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to reject this candidate?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form method="post" action="@Url.Action("UpdateStatus", "Application", new { area = "Employer" })"
                    id="deleteForm">
                    <input type="hidden" name="applicationId" id="deleteApplicationId" />
                    <input type="hidden" name="newStatus" id="newStatus" value="3" />
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">Reject</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Candidate Detail Modal -->
<div class="modal fade" id="candidateDetailModal" tabindex="-1" aria-labelledby="candidateDetailModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="candidateDetailModalLabel">Candidate Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="candidateDetailModalContent">
                <div class="text-center py-5">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-3">Loading candidate details...</p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // Handle delete modal
            const deleteModal = document.getElementById('deleteModal');
            deleteModal?.addEventListener('show.bs.modal', event => {
                const button = event.relatedTarget;
                const applicationId = button.dataset.applicationId;
                const applicantName = button.dataset.applicantName;
                const modal = event.target;

                modal.querySelector('#deleteApplicationId').value = applicationId;
                modal.querySelector('.modal-body').textContent = `Are you sure you want to reject the candidate ${applicantName}?`;
            });

            // Handle Candidate Detail Modal
            document.querySelectorAll('.view-detail-btn').forEach(btn => {
                btn.addEventListener('click', e => {
                    e.preventDefault();
                    const applicationId = btn.dataset.applicationId;
                    showCandidateDetail(applicationId);
                });
            });

            // Handle deleteForm submission
            const deleteForm = document.getElementById('deleteForm');
            deleteForm?.addEventListener('submit', event => {
                event.preventDefault();

                // Show loading state on the button
                const submitBtn = deleteForm.querySelector('button[type="submit"]');
                submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>Rejecting...';
                submitBtn.disabled = true;

                // Create form data from the form
                const formData = new FormData(deleteForm);

                // Get the anti-forgery token
                const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

                // Send the form using fetch
                fetch(deleteForm.action, {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': token
                    },
                    body: formData
                })
                    .then(response => {
                        if (response.ok) {
                            // Refresh the page or redirect
                            window.location.reload();
                        } else {
                            throw new Error('Server returned error');
                        }
                    })
                    .catch(error => {
                        // Re-enable the button on error
                        submitBtn.innerHTML = 'Reject';
                        submitBtn.disabled = false;
                        console.error('Error:', error);
                    });
            });

            function showCandidateDetail(applicationId) {
                // Show the modal with loading state first
                document.getElementById('candidateDetailModalContent').innerHTML = `
                                            <div class="text-center p-5">
                                                <div class="spinner-border text-primary" role="status">
                                                    <span class="visually-hidden">Loading...</span>
                                                            </div>
                                                <p class="mt-3">Loading candidate details...</p>
                                                        </div>
                                        `;

                // Clear footer
                const modalFooter = document.querySelector('#candidateDetailModal .modal-footer');
                modalFooter.innerHTML = `<button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Close</button>`;

                $('#candidateDetailModal').modal('show');

                // Fetch the candidate detail partial view
                fetch(`/Employer/Application/GetCandidateDetailPartial?applicationId=${applicationId}`, {
                    method: 'GET',
                    headers: {
                        'Cache-Control': 'no-cache'
                    }
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Failed to load candidate details');
                        }
                        return response.text();
                    })
                    .then(html => {
                        // Replace modal content with the returned HTML
                        document.getElementById('candidateDetailModalContent').innerHTML = html;

                        // Add contact button to footer
                        const email = document.querySelector('#candidateEmail')?.textContent || '';
                        if (email) {
                            modalFooter.innerHTML = `
                                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Close</button>
                                                    <a href="mailto:${email}" class="btn btn-primary" id="contactCandidateBtn">
                                        <i class="fas fa-envelope me-2"></i>Contact Candidate
                                    </a>
                                `;
                        }
                    })
                    .catch(error => {
                        console.error('Error loading candidate details:', error);
                        document.getElementById('candidateDetailModalContent').innerHTML = `
                                                <div class="alert alert-danger m-3">
                                                    <h5>Error Loading Details</h5>
                                                    <p>${error.message}</p>
                                </div>
                            `;
                    });
            }
        });
    </script>
}